# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

variables:
  buildConfiguration: 'Release'
  POSTMATES_CUSTOMER_ID: '$(postmates.customerId)'
  POSTMATES_SIGNATURE_SECRET: '$(postmates.signatureSecret)'
  Major: '1'
  Minor: '0'
  Patch: '0'

jobs:
- job: build_test
  condition: always()
  pool:
    vmImage: 'vs2017-win2016'
#Your build pipeline references an undefined variable named ‘buildConfiguration’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

  steps: 
  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 4.9.1'
    inputs:
      versionSpec: 4.9.1

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      arguments: '--configuration $(buildConfiguration)'

  #- task: DotNetCoreCLI@2
  #  env: { "POSTMATES_CUSTOMER_ID": '$(postmates.customerId)', "POSTMATES_SIGNATURE_SECRET": '$(postmates.signatureSecret)' }
  #  inputs:
  #    command: test
  #    projects: '**/Test.*.csproj'
  #    arguments: '--configuration $(buildConfiguration)'

- job: release
  condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/master'), not(eq(variables['Build.Reason'], 'PullRequest')))
  pool:
    vmImage: 'vs2017-win2016'
#Your build pipeline references an undefined variable named ‘buildConfiguration’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

  steps: 
  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 4.9.1'
    inputs:
      versionSpec: 4.9.1

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      arguments: '--configuration $(buildConfiguration)'

  #- task: DotNetCoreCLI@2
  #  env: { "POSTMATES_CUSTOMER_ID": '$(postmates.customerId)', "POSTMATES_SIGNATURE_SECRET": '$(postmates.signatureSecret)' }
  #  inputs:
  #    command: test
  #    projects: '**/Test.*.csproj'
  #    arguments: '--configuration $(buildConfiguration)'

  - task: NuGetCommand@2
    inputs:
      command: pack
      packagesToPack: '**/Postmates.NET.csproj'
      configuration: '$(BuildConfiguration)'
      packDestination: '$(Build.ArtifactStagingDirectory)'

  - task: NuGetCommand@2
    inputs:
      command: push
      nuGetFeedType: external
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      publishFeedCredentials: 'nuget'